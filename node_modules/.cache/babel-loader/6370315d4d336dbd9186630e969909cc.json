{"ast":null,"code":"var _jsxFileName = \"/Users/vietkt/My study app/youtube-projects/react-todo-app-v1-yt/src/components/TodoList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport TodoForm from \"./TodoForm\";\nimport Todo from \"./Todo\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TodoList() {\n  _s();\n\n  const [todos, setTodos] = useState([]);\n\n  const addTodo = todo => {\n    if (!todo.text) {\n      return;\n    }\n\n    const newTodos = [todo, ...todos];\n    setTodos(newTodos);\n  };\n\n  const updateTodo = (todoId, newValue) => {\n    if (!todo.text) {\n      return;\n    }\n\n    setTodos(pre => pre.map(item => item.id === todoId ? newValue : item));\n  };\n\n  const removeTodo = id => {\n    const removeArr = [...todos].filter(todo => todo.id != id);\n    setTodos(removeArr);\n  };\n\n  const comleteTodo = id => {\n    let updateTodos = todos.map(todo => {\n      if (todo.id === id) {\n        todo.isComplete = !todo.isComplete;\n      }\n\n      return todo;\n    });\n    setTodos(updateTodos);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"TodoList\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TodoForm, {\n      onSubmit: addTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Todo, {\n      todos: todos,\n      completeTodo: comleteTodo,\n      removeTodo: removeTodo,\n      updateTodo: updateTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TodoList, \"ZATHeV9x55jFrDOww2hwcxQ3V1U=\");\n\n_c = TodoList;\nexport default TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"sources":["/Users/vietkt/My study app/youtube-projects/react-todo-app-v1-yt/src/components/TodoList.js"],"names":["React","useState","TodoForm","Todo","TodoList","todos","setTodos","addTodo","todo","text","newTodos","updateTodo","todoId","newValue","pre","map","item","id","removeTodo","removeArr","filter","comleteTodo","updateTodos","isComplete"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;;AAEA,SAASC,QAAT,GAAoB;AAAA;;AAClB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;;AAEA,QAAMM,OAAO,GAAIC,IAAD,IAAU;AACxB,QAAI,CAACA,IAAI,CAACC,IAAV,EAAgB;AACd;AACD;;AAED,UAAMC,QAAQ,GAAG,CAACF,IAAD,EAAO,GAAGH,KAAV,CAAjB;AAEAC,IAAAA,QAAQ,CAACI,QAAD,CAAR;AACD,GARD;;AAUA,QAAMC,UAAU,GAAG,CAACC,MAAD,EAASC,QAAT,KAAsB;AACvC,QAAI,CAACL,IAAI,CAACC,IAAV,EAAgB;AACd;AACD;;AAEDH,IAAAA,QAAQ,CAAEQ,GAAD,IACPA,GAAG,CAACC,GAAJ,CAASC,IAAD,IAAWA,IAAI,CAACC,EAAL,KAAYL,MAAZ,GAAqBC,QAArB,GAAgCG,IAAnD,CADM,CAAR;AAGD,GARD;;AAUA,QAAME,UAAU,GAAID,EAAD,IAAQ;AACzB,UAAME,SAAS,GAAG,CAAC,GAAGd,KAAJ,EAAWe,MAAX,CAAmBZ,IAAD,IAAUA,IAAI,CAACS,EAAL,IAAWA,EAAvC,CAAlB;AACAX,IAAAA,QAAQ,CAACa,SAAD,CAAR;AACD,GAHD;;AAKA,QAAME,WAAW,GAAIJ,EAAD,IAAQ;AAC1B,QAAIK,WAAW,GAAGjB,KAAK,CAACU,GAAN,CAAWP,IAAD,IAAU;AACpC,UAAIA,IAAI,CAACS,EAAL,KAAYA,EAAhB,EAAoB;AAClBT,QAAAA,IAAI,CAACe,UAAL,GAAkB,CAACf,IAAI,CAACe,UAAxB;AACD;;AACD,aAAOf,IAAP;AACD,KALiB,CAAlB;AAMAF,IAAAA,QAAQ,CAACgB,WAAD,CAAR;AACD,GARD;;AAUA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,QAAD;AAAU,MAAA,QAAQ,EAAEf;AAApB;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,IAAD;AACE,MAAA,KAAK,EAAEF,KADT;AAEE,MAAA,YAAY,EAAEgB,WAFhB;AAGE,MAAA,UAAU,EAAEH,UAHd;AAIE,MAAA,UAAU,EAAEP;AAJd;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD;;GAlDQP,Q;;KAAAA,Q;AAoDT,eAAeA,QAAf","sourcesContent":["import React, { useState } from \"react\";\nimport TodoForm from \"./TodoForm\";\nimport Todo from \"./Todo\";\n\nfunction TodoList() {\n  const [todos, setTodos] = useState([]);\n\n  const addTodo = (todo) => {\n    if (!todo.text) {\n      return;\n    }\n\n    const newTodos = [todo, ...todos];\n\n    setTodos(newTodos);\n  };\n\n  const updateTodo = (todoId, newValue) => {\n    if (!todo.text) {\n      return;\n    }\n\n    setTodos((pre) =>\n      pre.map((item) => (item.id === todoId ? newValue : item))\n    );\n  };\n\n  const removeTodo = (id) => {\n    const removeArr = [...todos].filter((todo) => todo.id != id);\n    setTodos(removeArr);\n  };\n\n  const comleteTodo = (id) => {\n    let updateTodos = todos.map((todo) => {\n      if (todo.id === id) {\n        todo.isComplete = !todo.isComplete;\n      }\n      return todo;\n    });\n    setTodos(updateTodos);\n  };\n\n  return (\n    <div>\n      <h1>TodoList</h1>\n      <TodoForm onSubmit={addTodo} />\n      <Todo\n        todos={todos}\n        completeTodo={comleteTodo}\n        removeTodo={removeTodo}\n        updateTodo={updateTodo}\n      />\n    </div>\n  );\n}\n\nexport default TodoList;\n"]},"metadata":{},"sourceType":"module"}