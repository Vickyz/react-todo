{"ast":null,"code":"var _jsxFileName = \"/Users/vietkt/My study app/youtube-projects/react-todo-app-v1-yt/src/components/Todo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport TodoForm from \"./TodoForm\";\nimport { RiCloseCircleLine } from \"react-icons/ri\";\nimport { TiEdit } from \"react-icons/ti\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Todo(_ref) {\n  _s();\n\n  let {\n    todos,\n    completeTodo\n  } = _ref;\n  const [edit, setEdit] = useState({\n    id: null,\n    value: \"\"\n  });\n  console.log(\"--- todos ---\", todos);\n  return todos.map((todo, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: todo.isComlete ? \"todo-row comlete\" : \"todo-row\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: () => completeTodo(todo.id),\n      children: todo.text\n    }, todo.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"icons\",\n      children: [/*#__PURE__*/_jsxDEV(RiCloseCircleLine, {\n        onClick: () => removeTodo(todo.id),\n        className: \"delete-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TiEdit, {\n        onClick: () => setEdit({\n          id: todo.id,\n          value: todo.text\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, index, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this));\n}\n\n_s(Todo, \"DJZiNdvmL+6jjh34b/0zH6N4WRE=\");\n\n_c = Todo;\nexport default Todo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"sources":["/Users/vietkt/My study app/youtube-projects/react-todo-app-v1-yt/src/components/Todo.js"],"names":["React","useState","TodoForm","RiCloseCircleLine","TiEdit","Todo","todos","completeTodo","edit","setEdit","id","value","console","log","map","todo","index","isComlete","text","removeTodo"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,iBAAT,QAAkC,gBAAlC;AACA,SAASC,MAAT,QAAuB,gBAAvB;;;AAEA,SAASC,IAAT,OAAuC;AAAA;;AAAA,MAAzB;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAyB;AACrC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC;AAC/BS,IAAAA,EAAE,EAAE,IAD2B;AAE/BC,IAAAA,KAAK,EAAE;AAFwB,GAAD,CAAhC;AAKAC,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BP,KAA7B;AAEA,SAAOA,KAAK,CAACQ,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,kBACf;AACE,IAAA,SAAS,EAAED,IAAI,CAACE,SAAL,GAAiB,kBAAjB,GAAsC,UADnD;AAAA,4BAIE;AAAmB,MAAA,OAAO,EAAE,MAAMV,YAAY,CAACQ,IAAI,CAACL,EAAN,CAA9C;AAAA,gBACGK,IAAI,CAACG;AADR,OAAUH,IAAI,CAACL,EAAf;AAAA;AAAA;AAAA;AAAA,YAJF,eAQE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,8BACE,QAAC,iBAAD;AACE,QAAA,OAAO,EAAE,MAAMS,UAAU,CAACJ,IAAI,CAACL,EAAN,CAD3B;AAEE,QAAA,SAAS,EAAC;AAFZ;AAAA;AAAA;AAAA;AAAA,cADF,eAKE,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,MAAMD,OAAO,CAAC;AAAEC,UAAAA,EAAE,EAAEK,IAAI,CAACL,EAAX;AAAeC,UAAAA,KAAK,EAAEI,IAAI,CAACG;AAA3B,SAAD;AAA9B;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YARF;AAAA,KAEOF,KAFP;AAAA;AAAA;AAAA;AAAA,UADK,CAAP;AAkBD;;GA1BQX,I;;KAAAA,I;AA4BT,eAAeA,IAAf","sourcesContent":["import React, { useState } from \"react\";\nimport TodoForm from \"./TodoForm\";\nimport { RiCloseCircleLine } from \"react-icons/ri\";\nimport { TiEdit } from \"react-icons/ti\";\n\nfunction Todo({ todos, completeTodo }) {\n  const [edit, setEdit] = useState({\n    id: null,\n    value: \"\",\n  });\n\n  console.log(\"--- todos ---\", todos);\n\n  return todos.map((todo, index) => (\n    <div\n      className={todo.isComlete ? \"todo-row comlete\" : \"todo-row\"}\n      key={index}\n    >\n      <div key={todo.id} onClick={() => completeTodo(todo.id)}>\n        {todo.text}\n      </div>\n\n      <div className=\"icons\">\n        <RiCloseCircleLine\n          onClick={() => removeTodo(todo.id)}\n          className=\"delete-icon\"\n        />\n        <TiEdit onClick={() => setEdit({ id: todo.id, value: todo.text })} />\n      </div>\n    </div>\n  ));\n}\n\nexport default Todo;\n"]},"metadata":{},"sourceType":"module"}