{"ast":null,"code":"var _jsxFileName = \"/Users/vietkt/==== REACT JS  ====/Pratice/youtube-projects/react-todo-app-v1-yt/src/components/TodoForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction TodoForm(props) {\n  _s();\n\n  var arr = new Array();\n  const [input, setInput] = useState(props.edit ? props.edit.value : \"\");\n  const ipputRef = useRef(null);\n  useEffect(() => {\n    ipputRef.current.focus();\n  });\n\n  const handleChange = e => {\n    setInput(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    props.onSubmit({\n      id: Math.floor(Math.random() * 10000),\n      text: input\n    });\n    setInput(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"todo-form\",\n    onSubmit: handleSubmit,\n    children: props.edit ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Edit todo\",\n        value: input,\n        name: \"text\",\n        className: \"edit-input\",\n        onChange: handleChange,\n        ref: ipputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"edit-button\",\n        children: \"Update todo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Add a todo\",\n        value: input,\n        name: \"text\",\n        className: \"add-input\",\n        onChange: handleChange,\n        ref: ipputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"add-button\",\n        children: \"Add todo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TodoForm, \"2ORTZHlHfs+PzHy8Xu7ZZAzEl4E=\");\n\n_c = TodoForm;\nexport default TodoForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoForm\");","map":{"version":3,"sources":["/Users/vietkt/==== REACT JS  ====/Pratice/youtube-projects/react-todo-app-v1-yt/src/components/TodoForm.js"],"names":["React","useState","useEffect","useRef","TodoForm","props","arr","Array","input","setInput","edit","value","ipputRef","current","focus","handleChange","e","target","handleSubmit","preventDefault","onSubmit","id","Math","floor","random","text"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;;;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AACvB,MAAIC,GAAG,GAAG,IAAIC,KAAJ,EAAV;AAEA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAACI,KAAK,CAACK,IAAN,GAAaL,KAAK,CAACK,IAAN,CAAWC,KAAxB,GAAgC,EAAjC,CAAlC;AAEA,QAAMC,QAAQ,GAAGT,MAAM,CAAC,IAAD,CAAvB;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,QAAQ,CAACC,OAAT,CAAiBC,KAAjB;AACD,GAFQ,CAAT;;AAIA,QAAMC,YAAY,GAAIC,CAAD,IAAO;AAC1BP,IAAAA,QAAQ,CAACO,CAAC,CAACC,MAAF,CAASN,KAAV,CAAR;AACD,GAFD;;AAIA,QAAMO,YAAY,GAAIF,CAAD,IAAO;AAC1BA,IAAAA,CAAC,CAACG,cAAF;AAEAd,IAAAA,KAAK,CAACe,QAAN,CAAe;AACbC,MAAAA,EAAE,EAAEC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,KAA3B,CADS;AAEbC,MAAAA,IAAI,EAAEjB;AAFO,KAAf;AAKAC,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACD,GATD;;AAWA,sBACE;AAAM,IAAA,SAAS,EAAC,WAAhB;AAA4B,IAAA,QAAQ,EAAES,YAAtC;AAAA,cACGb,KAAK,CAACK,IAAN,gBACC;AAAA,8BACE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,WAAW,EAAC,WAFd;AAGE,QAAA,KAAK,EAAEF,KAHT;AAIE,QAAA,IAAI,EAAC,MAJP;AAKE,QAAA,SAAS,EAAC,YALZ;AAME,QAAA,QAAQ,EAAEO,YANZ;AAOE,QAAA,GAAG,EAAEH;AAPP;AAAA;AAAA;AAAA;AAAA,cADF,eAUE;AAAQ,QAAA,SAAS,EAAC,aAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAVF;AAAA,oBADD,gBAcC;AAAA,8BACE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,WAAW,EAAC,YAFd;AAGE,QAAA,KAAK,EAAEJ,KAHT;AAIE,QAAA,IAAI,EAAC,MAJP;AAKE,QAAA,SAAS,EAAC,WALZ;AAME,QAAA,QAAQ,EAAEO,YANZ;AAOE,QAAA,GAAG,EAAEH;AAPP;AAAA;AAAA;AAAA;AAAA,cADF,eAUE;AAAQ,QAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAVF;AAAA;AAfJ;AAAA;AAAA;AAAA;AAAA,UADF;AA+BD;;GAzDQR,Q;;KAAAA,Q;AA2DT,eAAeA,QAAf","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\n\nfunction TodoForm(props) {\n  var arr = new Array();\n\n  const [input, setInput] = useState(props.edit ? props.edit.value : \"\");\n\n  const ipputRef = useRef(null);\n\n  useEffect(() => {\n    ipputRef.current.focus();\n  });\n\n  const handleChange = (e) => {\n    setInput(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    props.onSubmit({\n      id: Math.floor(Math.random() * 10000),\n      text: input,\n    });\n\n    setInput(\"\");\n  };\n\n  return (\n    <form className=\"todo-form\" onSubmit={handleSubmit}>\n      {props.edit ? (\n        <>\n          <input\n            type=\"text\"\n            placeholder=\"Edit todo\"\n            value={input}\n            name=\"text\"\n            className=\"edit-input\"\n            onChange={handleChange}\n            ref={ipputRef}\n          />\n          <button className=\"edit-button\">Update todo</button>\n        </>\n      ) : (\n        <>\n          <input\n            type=\"text\"\n            placeholder=\"Add a todo\"\n            value={input}\n            name=\"text\"\n            className=\"add-input\"\n            onChange={handleChange}\n            ref={ipputRef}\n          />\n          <button className=\"add-button\">Add todo</button>\n        </>\n      )}\n    </form>\n  );\n}\n\nexport default TodoForm;\n"]},"metadata":{},"sourceType":"module"}